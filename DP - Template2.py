from abc import ABC, abstractmethod

class HiringProcess(ABC):
    def hire(self):
        self.review_resume()
        self.interview()
        self.offer_salary()
        print("âœ… Hiring process completed!\n")

    def review_resume(self):
        print("ðŸ“„ Reviewing resume...")

    @abstractmethod
    def interview(self):
        pass

    @abstractmethod
    def offer_salary(self):
        pass

class DeveloperHiring(HiringProcess):
    def interview(self):
        print("ðŸ’» Conducting technical interview...")

    def offer_salary(self):
        print("ðŸ’° Offering competitive salary for Developer.")

class ManagerHiring(HiringProcess):
    def interview(self):
        print("ðŸ“Š Conducting management interview...")

    def offer_salary(self):
        print("ðŸ’° Offering high salary with bonuses for Manager.")


dev_hiring = DeveloperHiring()
dev_hiring.hire()

manager_hiring = ManagerHiring()
manager_hiring.hire()
